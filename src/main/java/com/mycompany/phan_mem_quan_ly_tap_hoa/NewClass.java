package com.mycompany.phan_mem_quan_ly_tap_hoa;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.File;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Form quản lý và tìm kiếm hóa đơn
 * @author LENOVO
 */
public class NewClass extends javax.swing.JFrame {

    /**
     * Creates new form frm_Hoa_Don
     */
    public NewClass() {
        initComponents();
        setLocationRelativeTo(null); // Hiển thị form ở giữa màn hình
        setTitle("Quản lý hóa đơn"); // Đặt tiêu đề cho form
        
        // Thiết lập kích thước cột cho bảng
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(120); // Mã hóa đơn
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(120); // Ngày giờ
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(180); // Tên sản phẩm
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(80);  // Giá
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(80);  // Số lượng
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(100); // Thành tiền
        
        loadAllInvoices(); // Tải tất cả hóa đơn khi form mở
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Trở về");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Nhập mã hóa đơn:");

        jButton2.setText("Tìm kiếm");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        
        jButton3 = new javax.swing.JButton();
        jButton3.setText("Xem tất cả");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(50, 50, 50)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addGap(0, 50, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Ngày giờ", "Tên sản phẩm", "Giá", "Số lượng", "Thành tiền"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    /**
     * Xử lý sự kiện khi nút "Trở về" được nhấn
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // Đóng form hiện tại
        this.dispose();
        
        // Có thể mở form chính tại đây nếu cần
        // new frm_Main().setVisible(true);
    }
    
    /**
     * Xử lý sự kiện khi nút "Xem tất cả" được nhấn
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        loadAllInvoices();
    }

    /**
     * Xử lý sự kiện khi nút "Tìm kiếm" được nhấn
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String maHoaDon = jTextField1.getText().trim(); // Đảm bảo không có khoảng trắng thừa
        if (maHoaDon.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập mã hóa đơn để tìm kiếm.");
            return; // Không thực hiện tìm kiếm nếu mã hóa đơn trống
        }

        searchInvoice(maHoaDon);
    }
    
    /**
     * Tìm kiếm hóa đơn theo mã
     * @param maHoaDon Mã hóa đơn cần tìm
     */
    private void searchInvoice(String maHoaDon) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Xóa dữ liệu cũ

        boolean found = false; // Biến kiểm tra có tìm thấy kết quả hay không
        String filePath = "data/hoadon.csv";
        
        // Kiểm tra xem file có tồn tại không
        File file = new File(filePath);
        if (!file.exists()) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy file dữ liệu: " + filePath);
            return;
        }

        try (BufferedReader reader = new BufferedReader(new FileReader(filePath, java.nio.charset.StandardCharsets.UTF_8))) {
            String line;
            // Đọc qua từng dòng của file
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split("\\t"); // Phân tách bằng tab
                
                // Kiểm tra định dạng dữ liệu
                if (parts.length < 7) {
                    continue; // Bỏ qua dòng nếu không đủ dữ liệu
                }
                
                // So sánh mã hóa đơn (không phân biệt chữ hoa/thường)
                if (parts[0].trim().equalsIgnoreCase(maHoaDon)) {
                    try {
                        // Thêm dòng mới vào bảng
                        model.addRow(new Object[]{
                            parts[0].trim(), // mã hóa đơn
                            parts[1].trim(), // ngày giờ
                            parts[3].trim(), // tên sản phẩm
                            parts[4].trim(), // giá
                            parts[5].trim(), // số lượng
                            parts[6].trim()  // thành tiền
                        });
                        found = true; // Tìm thấy kết quả
                    } catch (ArrayIndexOutOfBoundsException e) {
                        System.err.println("Lỗi dữ liệu dòng: " + line);
                    }
                }
            }

            if (!found) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy hóa đơn với mã: " + maHoaDon);
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Lỗi đọc file: " + e.getMessage());
        }
    }
    
    /**
     * Tải tất cả hóa đơn từ file CSV
     */
    private void loadAllInvoices() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Xóa dữ liệu cũ
        
        String filePath = "D:\\MY CODE\\JAVA\\Phan_Mem_Quan_Ly_Tap_Hoa\\data\\hoadon.csv";
        
        // Kiểm tra xem file có tồn tại không
        File file = new File(filePath);
        if (!file.exists()) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy file dữ liệu: " + filePath);
            return;
        }

        try (BufferedReader reader = new BufferedReader(new FileReader(filePath, java.nio.charset.StandardCharsets.UTF_8))) {
            String line;
            // Đọc qua từng dòng của file
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split("\\t"); // Phân tách bằng tab
                
                // Kiểm tra định dạng dữ liệu
                if (parts.length < 7) {
                    continue; // Bỏ qua dòng nếu không đủ dữ liệu
                }
                
                try {
                    // Thêm dòng mới vào bảng
                    model.addRow(new Object[]{
                        parts[0].trim(), // mã hóa đơn
                        parts[1].trim(), // ngày giờ
                        parts[3].trim(), // tên sản phẩm
                        parts[4].trim(), // giá
                        parts[5].trim(), // số lượng
                        parts[6].trim()  // thành tiền
                    });
                } catch (ArrayIndexOutOfBoundsException e) {
                    System.err.println("Lỗi dữ liệu dòng: " + line);
                }
            }
            
            if (model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Không có dữ liệu hóa đơn nào!");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Lỗi đọc file: " + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_Hoa_Don.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_Hoa_Don.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_Hoa_Don.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_Hoa_Don.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_Hoa_Don().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration                   
}